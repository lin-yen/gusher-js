!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Gusher=t():e.Gusher=t()}(window,function(){return function(e){var t={};function n(s){if(t[s])return t[s].exports;var i=t[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:s})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([function(e,t){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function s(e){return"function"==typeof e}function i(e){return"object"==typeof e&&null!==e}function r(e){return void 0===e}e.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},n.prototype.emit=function(e){var t,n,o,c,h,l;if(this._events||(this._events={}),"error"===e&&(!this._events.error||i(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var a=new Error('Uncaught, unspecified "error" event. ('+t+")");throw a.context=t,a}if(r(n=this._events[e]))return!1;if(s(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:c=Array.prototype.slice.call(arguments,1),n.apply(this,c)}else if(i(n))for(c=Array.prototype.slice.call(arguments,1),o=(l=n.slice()).length,h=0;h<o;h++)l[h].apply(this,c);return!0},n.prototype.addListener=function(e,t){var o;if(!s(t))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,s(t.listener)?t.listener:t),this._events[e]?i(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,i(this._events[e])&&!this._events[e].warned&&(o=r(this._maxListeners)?n.defaultMaxListeners:this._maxListeners)&&o>0&&this._events[e].length>o&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace()),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(e,t){if(!s(t))throw TypeError("listener must be a function");var n=!1;function i(){this.removeListener(e,i),n||(n=!0,t.apply(this,arguments))}return i.listener=t,this.on(e,i),this},n.prototype.removeListener=function(e,t){var n,r,o,c;if(!s(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(o=(n=this._events[e]).length,r=-1,n===t||s(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(i(n)){for(c=o;c-- >0;)if(n[c]===t||n[c].listener&&n[c].listener===t){r=c;break}if(r<0)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(r,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},n.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(s(n=this._events[e]))this.removeListener(e,n);else if(n)for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},n.prototype.listeners=function(e){return this._events&&this._events[e]?s(this._events[e])?[this._events[e]]:this._events[e].slice():[]},n.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(s(t))return 1;if(t)return t.length}return 0},n.listenerCount=function(e,t){return e.listenerCount(t)}},function(e,t,n){"undefined"!=typeof self&&self,e.exports=function(e){function t(s){if(n[s])return n[s].exports;var i=n[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,s){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:s})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t){function n(e,t){const s=""+e;return s.length>=t?s:n("0"+s,t)}function s(e,t){this.name=e||"Log4js",this.options=t||{},this.level=i[this.options.level]||i.INFO}const i={DEBUG:"DEBUG",INFO:"INFO",WARN:"WARN",ERROR:"ERROR",FATAL:"FATAL"};s.prototype.setLevel=function(e){i[e]&&(this.level=i[e])},s.prototype.debug=function(){this.write(i.DEBUG,[].slice.call(arguments))},s.prototype.info=function(){this.write(i.INFO,[].slice.call(arguments))},s.prototype.warn=function(){this.write(i.WARN,[].slice.call(arguments))},s.prototype.error=function(){this.write(i.ERROR,[].slice.call(arguments))},s.prototype.fatal=function(){this.write(i.FATAL,[].slice.call(arguments))},s.prototype.write=function(){const e=arguments[0],t=arguments[1];if(e>=this.level){const s=t.slice(1);let r=["["+function(){let e=new Date;return e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate()+" "+n(e.getHours(),2)+":"+n(e.getMinutes(),2)+":"+n(e.getSeconds(),2)+":"+e.getMilliseconds()}()+"] "+i[e]+" "+this.name+" - "+t[0]+"   "];t.length>1&&(r=r.concat(s)),console.log.apply(console.log,r)}},s.getLogger=function(e,t){return new s(e,t)},e.exports=s}])},function(e,t,n){"use strict";n.r(t);var s=n(0),i=n.n(s),r=n(1),o=n.n(r).a.getLogger("Gusher");class c{constructor(e={}){this.url=e.url||"",this.token=e.token||"",this.state="initialized",this.emitter=new i.a}bind(e,t){return this.emitter.on(e,t),this}unbind(e,t){return this.emitter.removeListener(e,t),this}connect(e){this.socket&&this.close();let t=this.url;e&&(t=`${t}?token=${e}`);try{this.socket=new WebSocket(t)}catch(e){return this.onError(e),!1}return this.bindListeners(),o.debug("Connecting",{url:this.url,token:this.token}),this.changeState("connecting"),!0}close(){return!!this.socket&&(this.socket.close(),this.socket=null,!0)}changeState(e,t){this.state=e,this.emitter.emit(e,t)}bindListeners(){this.socket.onopen=(()=>{this.onOpen()}),this.socket.onerror=(e=>{this.onError(e)}),this.socket.onclose=(e=>{this.onClose(e)}),this.socket.onmessage=(e=>{this.onMessage(e)})}unbindListeners(){this.socket&&(this.socket.onopen=null,this.socket.onerror=null,this.socket.onclose=null,this.socket.onmessage=null)}onOpen(){this.changeState("open"),this.socket.onopen=null}onError(e){this.emitter.emit("error",e)}onClose(e){e?this.changeState("closed",{code:e.code,reason:e.reason,wasClean:e.wasClean}):this.changeState("closed"),this.unbindListeners(),this.socket=null}onMessage(e){let t;try{t=JSON.parse(e.data)}catch(e){return o.error({error:e}),void this.emitter("error",{error:e})}t&&(o.debug("Event recd",t),this.emitter.emit("message",t))}send(e,t,n){const s={event:e,data:t};this.channel&&(s.channel=n),o.debug("Event sent",s),this.socket&&this.socket.send(JSON.stringify(s))}}class h{constructor(e="",t={}){this.key=e,this.state="initialized",this.url=t.url,this.token=t.token,this.emitter=new i.a,this.reconnection=void 0===t.reconnection||t.reconnection,this.reconnectionDelay=void 0===t.reconnectionDelay?3e3:t.reconnectionDelay,this.retryMax=void 0===t.retryMax?Number.MAX_SAFE_INTEGER:t.retryMax,this.skipReconnect=!1,this.retryNum=0,this.connectionStartTimestamp=0,this.retryTimer=null,this.connection=new c({url:this.url,token:this.token}),this.connection.bind("open",()=>{this.connectionStartTimestamp=Date.now(),this.retryTimer&&(clearTimeout(this.retryTimer),this.retryNum=0,this.retryTimer=null),this.skipReconnect=!1,this.updateState("connected")}),this.connection.bind("message",e=>{this.emitter.emit("message",e)}),this.connection.bind("error",e=>{this.updateState("error",e)}),this.connection.bind("closed",e=>{const t=Date.now()-this.connectionStartTimestamp;t>0&&0!==this.connectionStartTimestamp&&(this.emitter.emit("@closed",Object.assign({},e,{session_time:t})),o.debug(`Session Time: ${t} ms`),this.connectionStartTimestamp=0),this.updateState("closed",e),this.retryIn(this.reconnectionDelay)})}retryIn(e=0){this.retryNum>=this.retryMax&&(this.disconnect(),this.emitter.emit("retryMax"),o.debug("Reconnect Max: ",this.retryNum)),this.reconnection&&!this.skipReconnect&&(this.retryTimer=setTimeout(()=>{this.retryNum+=1,o.debug("Reconnect attempts: ",this.retryNum),this.connect(),this.emitter.emit("retry",{retry:this.retryNum})},e))}bind(e,t){return this.emitter.on(e,t),this}unbind(e,t){return this.emitter.removeListener(e,t),this}unBindAll(...e){e.length?this.emitter.removeAllListeners(e):this.emitter.removeAllListeners()}connect(){this.updateState("connecting"),this.connection.connect(this.token),o.debug("Auth",{token:this.token})}disconnect(){this.skipReconnect=!0,this.connection.close(),this.updateState("disconnected")}updateState(e,t){const n=this.state;this.state=e,n!==e&&(o.debug("State changed",`'${n}' -> '${e}'`),this.emitter.emit("state_change",{previous:n,current:e}),this.emitter.emit(e,t))}send(e,t,n){return!!this.connection&&this.connection.send(e,t,n)}}class l{constructor(e,t){this.name=e,this.gusher=t,this.subscribed=!1,this.emitter=new i.a}trigger(e,t){return this.gusher.send(e,t,this.name)}disconnect(){this.subscribed=!0}bind(e,t){return this.emitter.on(e,t),this}unbind(e,t){return this.emitter.removeListener(e,t),this}handleEvent(e,t){"gusher.subscribe_succeeded"!==e&&"gusher.multi_subscribe_succeeded"!==e||(this.subscribed=!0),this.emitter.emit(e,t)}subscribe(){this.gusher.send("gusher.subscribe",{channel:this.name})}unsubscribe(){this.gusher.send("gusher.unsubscribe",{channel:this.name})}}class a{constructor(){this.channels=new Map}add(e,t){let n=this.channels.get(e);return n||(n=new l(e,t),this.channels.set(e,n)),n}find(e){return this.channels.get(e)}remove(e){const t=this.channels.get(e);return this.channels.delete(e),t}all(){const e=[];for(const t of this.channels.keys())e.push(t);return e}disconnect(){this.channels.forEach(e=>e.disconnect())}}n.d(t,"default",function(){return u});class u{constructor(e="",t={}){this.key=e,this.options=t,t.level&&o.setLevel(t.level),this.emitter=new i.a,this.channels=new a,this.connection=this.createConnection()}getAuthToken(){return this.options.token||""}setAuthToken(e){e&&(this.options.token=e,this.connection.unBindAll(),this.connection.disconnect(),this.connection=this.createConnection())}createConnection(){const e=new h(this.key,this.options);return e.bind("connected",()=>{this.subscribeAll(),this.emitter.emit("connected")}),e.bind("message",e=>{if(e){if(e.channel){const t=this.channels.find(e.channel);t&&t.handleEvent(e.event,e.data)}e.data&&e.data.channel&&Array.isArray(e.data.channel)&&e.data.channel.forEach(t=>{const n=this.channels.find(t);n&&n.handleEvent(e.event,e.data)}),this.emitter.emit(e.event,e.data),this.emitter.emit("*",e)}}),e.bind("disconnected",()=>{this.channels.disconnect(),this.emitter.emit("disconnected")}),e.bind("retry",e=>{this.emitter.emit("retry",e)}),e.bind("retryMax",()=>{this.emitter.emit("retryMax")}),e.bind("@closed",e=>{this.emitter.emit("@closed",e)}),e.bind("closed",e=>{this.emitter.emit("closed",e)}),e.bind("error",e=>{o.error("Error",e),this.emitter.emit("error",e)}),e}channel(e){return this.channels.find(e)}allChannel(){return this.channels.all()}connect(){this.connection.connect()}disconnect(){this.connection.disconnect()}bind(e,t){return this.emitter.on(e,t),this}unbind(e,t){return this.emitter.removeListener(e,t),this}subscribe(e){const t=this.channels.add(e,this);return"connected"===this.connection.state&&t.subscribe(),t}subscribes(e){if(!Array.isArray(e))return;const t={};return e.forEach(e=>{t[e]=this.channels.add(e,this)}),"connected"===this.connection.state&&this.subscribeAll(e),t}subscribeAll(e){const t=e||this.channels.all();this.send("gusher.multi_subscribe",{multi_channel:t})}unsubscribe(e){const t=this.channels.remove(e);t&&"connected"===this.connection.state&&t.unsubscribe()}send(e,t,n){this.connection.send(e,t,n)}}}])});